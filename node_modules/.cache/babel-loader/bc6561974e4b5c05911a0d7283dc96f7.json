{"ast":null,"code":"var _jsxFileName = \"/Users/chill/Code/School/sharedKeebProjectReact/src/pages/RedditFeed.js\";\nimport Helmet from \"react-helmet\";\nimport myscript from \"../redditFeedScript.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n{/*function posts() {*/}\n{/*  let posts = []*/}\n{/*  reddit.top(\"CustomKeyboards\").t(\"month\").limit(50).fetch(function (res) {*/}\n{/*    for (let i = 0; i < res.data.children.length; i++) {*/}\n{/*      let data = res.data.children[i].data;*/}\n\n//       // todo get our posts html\n//       if (!data.url.includes('i.redd.it')) continue;\n//       posts.push(\n//         <a href={\"https://reddit.com\" + data.permalink}>\n//           <div className=\"feed-item card\">\n//             <img className=\"card-img-top\" src={data.url} alt={data.title}/>\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">{data.title}</h5>\n//               <p className=\"card-text text-muted\">{\"by \" + data.author}</p>\n//             </div>\n//           </div>\n//         </a>\n//       );\n//     }\n//   });\n//   return posts\n// }\n\nconst RedditFeed = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://cdn.jsdelivr.net/npm/reddit.js@0.1.4/reddit.min.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: myscript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"feedHeader\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Reddit Keyboard Feed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"A list of the top custom keyboards on r/CustomKeyboards from the past month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Check them out for some inspiration!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feed-grid\",\n            id: \"redditFeed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = RedditFeed;\nexport default RedditFeed;\nvar _c;\n$RefreshReg$(_c, \"RedditFeed\");","map":{"version":3,"names":["Helmet","myscript","RedditFeed"],"sources":["/Users/chill/Code/School/sharedKeebProjectReact/src/pages/RedditFeed.js"],"sourcesContent":["import Helmet from \"react-helmet\";\nimport myscript from \"../redditFeedScript.js\"\n\n{/*function posts() {*/}\n{/*  let posts = []*/}\n{/*  reddit.top(\"CustomKeyboards\").t(\"month\").limit(50).fetch(function (res) {*/}\n{/*    for (let i = 0; i < res.data.children.length; i++) {*/}\n{/*      let data = res.data.children[i].data;*/}\n\n//       // todo get our posts html\n//       if (!data.url.includes('i.redd.it')) continue;\n//       posts.push(\n//         <a href={\"https://reddit.com\" + data.permalink}>\n//           <div className=\"feed-item card\">\n//             <img className=\"card-img-top\" src={data.url} alt={data.title}/>\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">{data.title}</h5>\n//               <p className=\"card-text text-muted\">{\"by \" + data.author}</p>\n//             </div>\n//           </div>\n//         </a>\n//       );\n//     }\n//   });\n//   return posts\n// }\n\nconst RedditFeed = () => {\n  return (\n    <>\n      <Helmet>\n        <script src=\"https://cdn.jsdelivr.net/npm/reddit.js@0.1.4/reddit.min.js\"></script>\n        <script src={myscript}></script>\n      </Helmet>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"page-header header\">\n            <div id=\"feedHeader\">\n              <h1>Reddit Keyboard Feed<br/><small>A list of the top custom keyboards on r/CustomKeyboards from the past\n                month</small></h1>\n              <p>Check them out for some inspiration!</p>\n            </div>\n\n            <div className=\"feed-grid\" id=\"redditFeed\">\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nexport default RedditFeed;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,wBAAwB;AAAA;AAAA;AAE7C,CAAC,sBAAsB;AACvB,CAAC,oBAAoB;AACrB,CAAC,+EAA+E;AAChF,CAAC,4DAA4D;AAC7D,CAAC,+CAA+C;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACvB,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA,wBACL;QAAQ,GAAG,EAAC;MAA4D;QAAA;QAAA;QAAA;MAAA,QAAU,eAClF;QAAQ,GAAG,EAAED;MAAS;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QACzB,eACT;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QAAK,SAAS,EAAC,KAAK;QAAA,uBAClB;UAAK,SAAS,EAAC,oBAAoB;UAAA,wBACjC;YAAK,EAAE,EAAC,YAAY;YAAA,wBAClB;cAAA,gDAAwB;gBAAA;gBAAA;gBAAA;cAAA,QAAK;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACd;YAAA;cAAA;cAAA;cAAA;YAAA,QAAK,eACpB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA2C;UAAA;YAAA;YAAA;YAAA;UAAA,QACvC,eAEN;YAAK,SAAS,EAAC,WAAW;YAAC,EAAE,EAAC;UAAY;YAAA;YAAA;YAAA;UAAA,QACpC;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACL;AAEP,CAAC;AAAC,KAvBIC,UAAU;AAyBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}